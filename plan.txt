** 현재 할거 **
종속적 성격을 가진 task
- template 깔쌈하게 수정 (b, f등에서 post정보 보여줄 때 좋아요 수 & 자신이 이 개시물에 좋아요 눌렀는지 여부도 보여주자)
- post_like 기능 구현 -> 추후에 comment_like에도 적용
- comment 기능 구현

독립적 성격을 가진 task
- settingView 구현
- 로그아웃 기능 구현
- 사람 페이지에 들어가면 follow 버튼 뜨게 (팔로잉 전에는 "팔로잉하기" -> 누르면 "팔로우중" -> 다시 누르면 "팔로잉하기"로 복귀)

*웹프 수행 - 구현할거*

탬플릿 8개

a.로그인(/ )                                         -done
- 제일 앞에 보여지는 페이지
b.친구 게시글 탐색(/friend)
- 시간순서로 보여줌
- 사진, 간단한 설명(100자 이내)
- 좋아요 숫자 보여줌
- 댓글 임의로 하나정도(?)
c.전체 게시글 탐색(/feed)
- 시간순서로 보여줌
- 친구 게시글 탐색이랑 동일한 느낌으로
- 댓글 안보여줌 
d.개인 페이지(/mypage)
- 시간순서로 보여줌
- 전체 게시글 탐색이랑 비슷한 느낌으로 

e.팔로워 / 팔로잉 목록 페이지(/followers /followings)
- 그냥 이름들 리스트업
내가 좋아요를 누를 개시물 목록
- 전체 게시글이랑 비슷한 느낌으로 나열

f.게시글 상세 페이지 (/postdetails)
- 사진, 설명 모두
- 댓글 모두 보여줌 : 좋아요, 댓글 달기 표시

g.개인 설정(/settings)
- 이름 변경, 친구 추가 관리



*웹프 수행 - 조건*

모델 설계
모델 클래스 5개(FK, MTM 필수)                                           - ok
각 클래스 별 컬럼은 3개 이상                                              - ok

뷰 설계
클래스형 뷰(6개 이상)                                                   - ok
-> 제네릭 뷰 3개 이상 쓰기(ListView, DetailView, TemplateView 등)        - ok
2명일 경우 함수형 뷰(2개 이상)                                            - ok

템플릿 설계
상속 구조 이용                                                         - ok
style 적용 또는 bootstrap 사용(완성도)                                   - ok
어떤 식으로 변수가 넘어가는 지 작성
템플릿 5개 이상/ 2명일 경우(8개 이상 + bootstrap 필수 사용)                   - ok
